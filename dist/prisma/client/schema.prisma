model Movie {
  id        Int    @id @default(autoincrement())
  title     String
  storyline String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  addedToFavBy User[]
  ratings      Rating[]
  reviews      Review[]
  genres       Genre[]
}

model Rating {
  id      Int   @id @default(autoincrement())
  value   Int
  movie   Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId Int
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
}

model Review {
  id    Int    @id @default(autoincrement())
  title String
  text  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  movie   Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId Int
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String
  movies Movie[]
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
  output          = "../client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  role            Role     @default(USER)
  favouriteMovies Movie[]
  ratings         Rating[]
  reviews         Review[]
  session         Session?
}

model Session {
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
  token  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
