model Celeb {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  biography String @db.Text
  imageURL  String

  director Movie[] @relation("directors")
  writer   Movie[] @relation("writers")
  cast     Movie[] @relation("cast")
}

model Movie {
  id          Int       @id @default(autoincrement())
  movieData   MovieData @relation(fields: [movieDataId], references: [id])
  movieDataId Int       @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  addedToFavBy User[]
  ratings      Rating[]
  reviews      Review[]
  genres       Genre[]

  director   Celeb?  @relation("directors", fields: [directorId], references: [id])
  directorId Int?
  writers    Celeb[] @relation("writers")
  cast       Celeb[] @relation("cast")
}

model MovieData {
  id    Int    @id @default(autoincrement())
  Movie Movie?

  title             String
  storyline         String   @db.Text
  posterURL         String
  releaseDate       DateTime
  length            String
  countryOfOrigin   String
  productionCompany String
  language          String
}

model Rating {
  value   Int
  movie   Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId Int
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int

  @@id([movieId, userId])
}

model Review {
  id    Int    @id @default(autoincrement())
  title String
  text  String @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  movie   Movie @relation(fields: [movieId], references: [id], onDelete: Cascade)
  movieId Int
  user    User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
}

model Genre {
  id     Int     @id @default(autoincrement())
  name   String
  movies Movie[]
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder", "typedSql"]
  output          = "../client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  name     String
  password String

  role            Role     @default(USER)
  favouriteMovies Movie[]
  ratings         Rating[]
  reviews         Review[]
  session         Session?
}

model Session {
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
  token  String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
